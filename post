#!/bin/bash
#
# Copyright (C) 2020 azrim.
# All rights reserved.

Help()
{
   # Display Help
   echo "Simple script to post silont kernel updates."
   echo
   echo "Usage: post [-option] arguments"
   echo "options:"
   echo "* d - device codename (e.g. surya)"
   echo "* f - filename without .zip (e.g. SiLonT-Surya-tooru-20201212-1621)"
   echo "* c - kernel codename (e.g. tooru)"
   echo "  g - group username (e.g. azrim_lab - don't declare if don't have any)"
   echo "  x - xda thread link (e.g. https://xda-developers.com/blablabla - don't declare if don't have any)"
   echo "  h - Print this Help."
   echo
   echo "* is necessary, must be set"
}

while getopts d:f:c:g:x:h flag
do
    case "${flag}" in
        d) device=${OPTARG};;
        f) filename=${OPTARG};;
        c) codename=${OPTARG};;
        g) group=${OPTARG};;
        x) xda=${OPTARG};;
        h) # display Help
           Help
           exit;;
        \?) # incorrect option
           echo "Error: Invalid option"
           echo "Use post -h  for available options"
           exit;;
    esac
done

post()
{
# Var
CHATID="" # Group/channel chatid (use rose/userbot to get it)
TELEGRAM_TOKEN="" # Get from botfather
RELEASED=$(date +'%d %B %Y')
sep="|"

# Device VAR
if [[ "${device}" =~ "surya" ]]; then
    maintainer="Hiitagiii"
    pling="https://www.pling.com/p/1452895/"
    devicename="Poco X3 NFC"
fi
if [[ "${device}" =~ "whyred" ]]; then
    maintainer="altharena"
    pling="https://www.pling.com/p/1408532/"
    devicename="Redmi Note 5"
fi
if [[ "${device}" =~ "tulip" ]]; then
    maintainer="altharena"
    pling="https://www.pling.com/p/1457781/"
    devicename="Redmi Note 6 Pro"
fi
if [[ "${device}" =~ "miatoll" ]]; then
    maintainer="ThisIsTag"
    pling="https://www.pling.com/p/1437666/"
    devicename="Xiaomi 720G series"
fi
if [[ "${device}" =~ "RMX1971" ]]; then
    maintainer="megakampang"
    pling="https://www.pling.com/p/1413659/"
    devicename="Realme 5 Pro"
fi
if [[ "${device}" =~ "RMX1851" ]]; then
    maintainer="Artoriaa"
    pling="https://www.pling.com/p/1439222/"
    devicename="Realme 3 Pro"
fi
if [[ "${device}" =~ "onclite" ]]; then
    maintainer="BryanHafidzTorvalds"
    pling="https://www.pling.com/p/1464631/"
    devicename="Redmi 7"
fi
if [[ "${device}" =~ "tissot" ]]; then
    maintainer="Yincen"
    pling="https://www.pling.com/p/1408418/"
    devicename="MI A1"
fi

if [[ "${group}" =~ "-x" ]]; then
    group="silont_support"
fi
if [[ -z $group ]]; then
    group="silont_support"
fi
if [[ -z $xda ]]; then
    xdathread="$xda"
else
    xdathread="üîπ [XDA Thread]($xda)"
fi

# Export Telegram.sh
TELEGRAM_FOLDER="${HOME}"/telegram
if ! [ -d "${TELEGRAM_FOLDER}" ]; then
    git clone https://github.com/fabianonline/telegram.sh/ "${TELEGRAM_FOLDER}"
fi

TELEGRAM="${TELEGRAM_FOLDER}"/telegram

BANNER_LINK="https://github.com/silont-project/official-devices/raw/master/$device/$device.png"
BANNER="$HOME/$device.png"
if ! [ -f "${BANNER}" ]; then
    wget $BANNER_LINK -O $BANNER
fi

tg_cast() {
    "${TELEGRAM}" -t "${TELEGRAM_TOKEN}" -c "${CHATID}" -i "$BANNER" -M \
    "$(
		for POST in "${@}"; do
			echo "${POST}"
		done
    )"
}

tg_sticker() {
curl -s -F chat_id="${CHATID}" -F sticker="$1" https://api.telegram.org/bot"${TELEGRAM_TOKEN}"/sendSticker > /dev/null
}

# message var
l1="[Download]($pling)"
l2="[Cl & Notes](https://github.com/silont-project/official-devices/raw/master/"$device"/"$filename".txt)"
l3="[Support Group](https://t.me/$group)"
l41="[Groups](https://t.me/silont_support)"
l42="[Channel](https://t.me/silont_updates)"
l4="$l41 $sep $l42"
l5="$xdathread"

# Starting
tg_sticker "CAACAgUAAxkBAAE-BLRf6Zi5wdrMZaYVBS0RWaj0CqJd2gACYQIAAndoICyTqqxZHIg5px4E"
tg_cast "üì≤ *SiLonT Kernel $sep $devicename ($device)*" \
"üî® by @$maintainer" \
"" \
"üóì Released: *$RELEASED*" \
"‚ÑπÔ∏è Codename: *$codename*" \
"" \
"üîπ $l1" \
"üîπ $l2" \
"üîπ $l3" \
"$l5" \
"" \
"*Join* $l4" \
"#${devicename// /} #$device #StayNgelonT"
}

if [[ -z $1 ]]; then
    echo "ERROR: No option"
    echo "Use post -h or --help for available options"
    exit
fi
if [[ -z $device ]]; then
    echo "ERROR: device not set"
    exit
fi
if [[ -z $filename ]]; then
    echo "ERROR: filename not set"
    exit
fi
if [[ -z $codename ]]; then
    echo "ERROR: codename not set"
    exit
fi
post
